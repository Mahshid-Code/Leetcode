# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def isSameTree(self, p, q):
        if p and q:
            if p.val!=q.val:
                return False
            if not self.isSameTree(p.right,q.right) or not self.isSameTree(p.left,q.left):
                return False
        if (not p and q) or (p and not q):
            return False
        return True
        """
            CLEANER:
             def isSameTree(self, p, q):
        if p == None and q == None:
            return True
        elif p == None or q == None:
            return False
        elif p.val == q.val:
            return self.isSameTree(p.left, q.left) and
                   self.isSameTree(p.right, q.right)
        else:
            return False
        
        :type p: TreeNode
        :type q: TreeNode
        :rtype: bool
        """
        
